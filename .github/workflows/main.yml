name: Flutter Blue/Green CI/CD

on:
  push:
    branches:
      - "main"
      - "production"
  pull_request:
    branches:
      - "main"
      - "production"

jobs:
  build_and_test:
    name: Build & Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
      - run: flutter pub get
      - run: dart format --output=none --set-exit-if-changed .
      - run: dart analyze .
      - run: flutter test --coverage

      - name: Check code coverage
        run: |
          # Extrait le pourcentage de couverture de la sortie de lcov
          COVERAGE=$(lcov --summary coverage/lcov.info | grep "lines......" | awk '{print $2}' | sed 's/%//')
          echo "Code coverage is $COVERAGE%"
          # Convertit en entier pour la comparaison
          COVERAGE_INT=${COVERAGE%.*}
          if [ $COVERAGE_INT -lt 50 ]; then
            echo "Erreur : La couverture de code ($COVERAGE%) est inf√©rieure au seuil requis de 50%."
            exit 1
          else
            echo "La couverture de code est suffisante."
          fi
          
      - name: Build web application
        run: flutter build web --release
      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: build-web
          path: build/web

  deploy_green:
    name: Deploy to Green (main)
    needs: build_and_test
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
        with:
          name: build-web
          path: build/web
      - name: Deploy to Firebase Hosting (Green)
        uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: '${{ secrets.GITHUB_TOKEN }}'
          firebaseServiceAccount: '${{ secrets.FIREBASE_SERVICE_ACCOUNT }}'
          projectId: '${{ secrets.FIREBASE_PROJECT_ID }}'
          target: green
          channelId: live

  deploy_blue:
    name: Deploy to Blue (production)
    needs: build_and_test
    if: github.ref == 'refs/heads/production' && github.event_name == 'push'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
        with:
          name: build-web
          path: build/web
      - name: Deploy to Firebase Hosting (Blue)
        uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: '${{ secrets.GITHUB_TOKEN }}'
          firebaseServiceAccount: '${{ secrets.FIREBASE_SERVICE_ACCOUNT }}'
          projectId: '${{ secrets.FIREBASE_PROJECT_ID }}'
          target: blue
          channelId: live
